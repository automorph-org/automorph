#!/usr/bin/env bash
# Create and publish the specified version
set -eo pipefail

# Process arguments
if [ "$#" -lt 1 ]; then
  echo "Missing version"
  exit 1
fi
if [ -n "$2" ]; then
  force=true
fi

# Configure settings
version="$1"
tag="v${version}"
release_notes="release-notes.md"

# Check binary compatibility
if [ -z "${force}" ]; then
 # sbt '+ mimaReportBinaryIssues ; tastyMiMaReportIssues'
 sbt '+ mimaReportBinaryIssues'
fi

# EXtract a changelog since the last tag
git log $(git describe --tags --abbrev=0)..HEAD --format='%s' | grep '^-' > "${release_notes}"

# Create a new tag
git tag -a -m "Version: ${version}" "${tag}"
git push --follow-tags

# Publish artifacts
sbt '+ publishSigned ; sonatypeBundleRelease'

# Create a release
gh release create "${tag}" -T "${version}" -f "${release_notes}"
rm -f "${release_notes}"

# Update examples
sed -i "s/:automorph-default:.*$/:automorph-default:${version}/" examples/project/src/main/scala/examples/Quickstart.scala
git commit -m 'Update examples' examples/project/src/main/scala/examples/Quickstart.scala
git push

